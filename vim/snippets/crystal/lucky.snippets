snippet form.text "Lucky - Text Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.text_input
endsnippet

snippet form.textarea "Lucky - Text Area" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.textarea
endsnippet

snippet form.password "Lucky - Password Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.password_input
endsnippet

snippet form.email "Lucky - Email Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.email_input
endsnippet

snippet form.hidden "Lucky - Hidden Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.hidden_input
endsnippet

snippet form.hidden "Lucky - Hidden Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.hidden_input
endsnippet

snippet form.url "Lucky - URL Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.url_input
endsnippet

snippet form.search "Lucky - Search Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.search_input
endsnippet

snippet form.telephone "Lucky - Telephone Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.telephone_input
endsnippet

snippet form.date "Lucky - Date Field" b
m Shared::Field, op.${1:model_field}, "${2:Input label}", &.date_input
endsnippet

snippet col.model "Lucky - Model Column" b
column ${1:field_name} : ${2:FieldType}
endsnippet

snippet belongs.model "Lucky - Model Belongs To" b
belongs_to ${1:field_name} : ${2:BelongsToModel}
endsnippet

snippet col.migration "Lucky - Migration Column" b
add ${1:field_name} : ${2:FieldType}
endsnippet

snippet col.unique.migration "Lucky - Migration Column" b
add ${1:field_name} : ${2:FieldType}, unique: true${3:, index: true}
endsnippet

snippet col.fill.migraiton "Lucky - Migration with Fill" b
add ${1:field_name} : ${2:FieldType}, fill_existing_with: ${3:"Value", 123, true, etc.}
endsnippet

snippet belongs.migration "Lucky - Migration Belongs To" b
add_belongs_to ${1:field_name} : ${2:BelongsToModel}, on_delete: ${3::cascade}
endsnippet

snippet belongs.uuid.migration "Lucky - Migration Belongs To with UUID" b
add_belongs_to ${1:field_name} : ${2:BelongsToModel}, on_delete: ${3::cascade}, foreign_key_type: UUID
endsnippet

snippet execute.migration "Lucky - Migration Execute" b
execute "${1:SQL}"
endsnippet

snippet extension.migration "Lucky - Migration Add Extension" b
execute "CREATE EXTENSION IF NOT EXISTS ${1:extension_name}"
endsnippet

snippet index.migration "Lucky - Migration Index" b
create_index ${1:users (table name)}, [:${2:author_id (column)}]${3:, unique: true}
endsnippet

snippet tag.page "Lucky - Single Line Tag" b
${1:tag} ${2:"Content"}
endsnippet

snippet tagl.page "Lucky - Multiline Tag" b
${1:tag} ${2} do
	${3}
end
${0}
endsnippet

snippet action.edit "Lucky - Browser Edit Action" b
${1:object} = ${2:Object}Query.find($1_id)
html $2s::EditPage, save_$1: Save$2.new($1)
endsnippet

snippet action.update "Lucky - Browser Update Action" b
${1:object} = ${2:Object}Query.find($1_id)
Save$2.update($1, params) do |operation, updated_$1|
	if operation.saved?
		flash.success = "$2 updated"
		redirect to: $2s::Show.with($1)
	else
		flash.failure = "Failed to update $2"
		html $2s::EditPage, save_$1: operation
	end
end
endsnippet

snippet action.index "Lucky - Browser Index Action" b
${1:object} = ${2:Object}Query.new.created_at.desc_order
html $2s::IndexPage, $1s: $1s
endsnippet

snippet action.show "Lucky - Browser Show Action" b
${1:object} = ${2:Object}Query.new.find($1_id)
html $2s::ShowPage, $1: $1
endsnippet

snippet action.delete "Lucky - Browser Delete Action" b
${1:object} = ${2:Object}Query.find($1_id)
$1.delete
flash.success = "$2 deleted"
redirect $2s::Index
endsnippet

snippet picnic "Lucky - Import Picnic CSS" b
css_link href: "https://cdn.jsdelivr.net/npm/picnic", data_turbolinks_track: "reload"
endsnippet
