" Repository Link: https://github.com/preservim/nerdtree

Plug 'preservim/nerdtree'

map <leader>t :NERDTreeToggle<CR>

augroup nerdtree_custom
  " Auto-start NerdTree if no files are specified
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

  " Auto-start NerdTree if a directory is specified
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | exe 'cd '.argv()[0] | endif

  " Close NERDTree if it's the only window left
  autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

  " Sync NERDTree with current file
  autocmd BufEnter * silent! call s:syncTree()
augroup END

" Check if NERDTree is open
function! s:isNERDTreeOpen()
  return exists('t:NERDTreeBufName') && (bufwinnr(t:NERDTreeBufName) != -1)
endfunction

" Sync NerdTree with currently open file
" Exclude diff files and NERDTree files
function! s:syncTree()
  if &modifiable && s:isNERDTreeOpen() && strlen(expand('%')) > 0 && !&diff && bufname('%') !~# 'NERD_tree'
    try
      NERDTree
      wincmd p
      NERDTreeFind
      if bufname('%') =~# 'NERD_tree'
        setlocal cursorline
        wincmd p
      endif
    endtry
  endif
endfunction

" vim:ft=vim
