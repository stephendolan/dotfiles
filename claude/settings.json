{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(ast-grep:*)",
      "Bash(bat:*)",
      "Bash(bin/rails:*)",
      "Bash(bundle:*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(cp:*)",
      "Bash(delta:*)",
      "Bash(echo:*)",
      "Bash(eza:*)",
      "Bash(fd:*)",
      "Bash(find:*)",
      "Bash(fzf:*)",
      "Bash(gh:*)",
      "Bash(git:*)",
      "Bash(glow:*)",
      "Bash(grep:*)",
      "Bash(htop)",
      "Bash(jq:*)",
      "Bash(just:*)",
      "Bash(lazygit:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx:*)",
      "Bash(pnpm:*)",
      "Bash(prettier:*)",
      "Bash(rg:*)",
      "Bash(rm:*)",
      "Bash(sed:*)",
      "Bash(shellcheck:*)",
      "Bash(tmux:*)",
      "Bash(tree:*)",
      "Bash(true)",
      "Bash(tsc:*)",
      "Bash(wget:*)",
      "Bash(yamllint:*)",
      "Bash(yarn:*)",
      "Bash(zoxide:*)",
      "WebFetch(domain:clerk.com)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:docs.sentry.io)",
      "WebFetch(domain:docs.tuple.app)",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:github.com)",
      "mcp__ChartMogul",
      "mcp__MixPanel",
      "mcp__Sentry__find_errors",
      "mcp__Sentry__get_issue_details",
      "mcp__linear__get_document",
      "mcp__linear__get_issue",
      "mcp__linear__get_project",
      "mcp__linear__list_comments",
      "mcp__linear__list_documents",
      "mcp__linear__list_issues",
      "mcp__linear__list_project"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false,
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); current_dir=$(echo \"$input\" | jq -r '.workspace.current_dir'); model_name=$(echo \"$input\" | jq -r '.model.display_name'); output_style=$(echo \"$input\" | jq -r '.output_style.name // \"default\"'); current_basename=$(basename \"$current_dir\"); if git -C \"$current_dir\" rev-parse --git-dir >/dev/null 2>&1; then git_branch=$(git -C \"$current_dir\" branch --show-current 2>/dev/null || echo \"HEAD\"); git_status=\"\"; if ! git -C \"$current_dir\" diff-index --quiet HEAD -- 2>/dev/null; then git_status=\"${git_status}M\"; fi; if [ -n \"$(git -C \"$current_dir\" ls-files --others --exclude-standard 2>/dev/null)\" ]; then git_status=\"${git_status}?\"; fi; if ! git -C \"$current_dir\" diff-index --quiet --cached HEAD -- 2>/dev/null; then git_status=\"${git_status}+\"; fi; upstream=$(git -C \"$current_dir\" rev-parse --abbrev-ref @{upstream} 2>/dev/null); if [ -n \"$upstream\" ]; then ahead=$(git -C \"$current_dir\" rev-list --count HEAD..@{upstream} 2>/dev/null || echo 0); behind=$(git -C \"$current_dir\" rev-list --count @{upstream}..HEAD 2>/dev/null || echo 0); if [ \"$ahead\" -gt 0 ]; then git_status=\"${git_status}↓\"; fi; if [ \"$behind\" -gt 0 ]; then git_status=\"${git_status}↑\"; fi; if [ \"$ahead\" -eq 0 ] && [ \"$behind\" -eq 0 ] && [ -z \"$git_status\" ]; then git_status=\"✓\"; fi; fi; if [ -n \"$git_status\" ]; then git_info=$(printf \"\\033[1;35m%s\\033[0m \\033[1;33m%s\\033[0m \" \"$git_branch\" \"$git_status\"); else git_info=$(printf \"\\033[1;35m%s\\033[0m \" \"$git_branch\"); fi; else git_info=\"\"; fi; printf \"\\033[2m\\033[1;36m%s\\033[0m\\033[2m %s• \\033[1;34m%s\\033[0m\\033[2m\" \"$current_basename\" \"$git_info\" \"$model_name\"; if [ \"$output_style\" != \"default\" ] && [ \"$output_style\" != \"null\" ]; then printf \"\\033[2m (\\033[1;33m%s\\033[0m\\033[2m)\" \"$output_style\"; fi"
  },
  "alwaysThinkingEnabled": true,
  "feedbackSurveyState": {
    "lastShownTime": 1754059139990
  },
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "open raycast://confetti"
          }
        ]
      }
    ]
  }
}
