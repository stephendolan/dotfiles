
# HISTORY
setopt hist_ignore_all_dups inc_append_history
HIST_STAMPS="yyyy-mm-dd"
HISTFILE=~/.zhistory
HISTSIZE=4096
SAVEHIST=4096
export ERL_AFLAGS="-kernel shell_history enabled"

# CD BEHAVIOR
setopt auto_cd auto_pushd pushd_minus pushd_silent pushd_to_home cdable_vars
DIRSTACKSIZE=5

# GLOBBING
setopt extended_glob
unsetopt no_match

# COMPLETION
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'

# EDITOR
export VISUAL=nvim
export EDITOR=$VISUAL
export MANPAGER="nvim -c 'set ft=man' -"

# HOMEBREW ZSH PLUGINS
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# ALIASES
[[ -e $HOME/.aliases ]] && source $HOME/.aliases

# PLATFORM-SPECIFIC CONFIG
[[ -f $HOME/.zsh/config/mac ]] && source $HOME/.zsh/config/mac
[[ -f $HOME/.zsh/config/linux ]] && source $HOME/.zsh/config/linux
[[ -f $HOME/.zsh/config/fzf ]] && source $HOME/.zsh/config/fzf
[[ -f $HOME/.zsh/config/ripgrep ]] && source $HOME/.zsh/config/ripgrep

# ASDF
source /opt/homebrew/opt/asdf/libexec/asdf.sh

# FZF
source <(fzf --zsh)

# Override default Ctrl+T behavior to open in editor
export FZF_CTRL_T_OPTS="--bind 'enter:execute($EDITOR {})+abort'"

# MCFLY (better history)
export MCFLY_KEY_SCHEME=vim
export MCFLY_FUZZY=0
export MCFLY_RESULTS=15
export MCFLY_DELETE_WITHOUT_CONFIRM=true
eval "$(mcfly init zsh)"

# STARSHIP PROMPT
eval "$(starship init zsh)"

# DIRENV
eval "$(direnv hook zsh)"

# AI ASSISTANT
ai() {
  printf "ðŸ¤” Thinking..." >&2
  local cmd=$(claude -p "First read ~/Brewfile to see what tools are available, then return only the command to: $*. No explanation, no backticks, no formatting. Just the raw command ready to execute using the best available tools. If the command produces output, include flags for the prettiest, most human-readable formatting (colors, headers, etc.)." --model sonnet)
  printf "\r\e[2K" >&2
  print -z "$cmd"
}

explain() {
  printf "ðŸ¤” Thinking..." >&2
  local explanation=$(claude -p "Explain this command: $*. Be concise and clear." --model sonnet)
  printf "\r\e[2K" >&2
  echo "$explanation"
}

gci() {
  printf "ðŸ¤” Analyzing changes..." >&2
  local commit_msg=$(claude -p "Read the output of 'git diff --cached' and 'git status --porcelain' to understand what changes are staged. Generate a concise, clear git commit message following conventional commit standards. Return only the complete git commit command with the -m flag and message in quotes. No explanation, no backticks, no formatting. Just the raw command ready to execute." --model sonnet)
  printf "\r\e[2K" >&2
  print -z "$commit_msg"
}

# PATHS
export PATH="$PATH:/Users/stephen/.cache/lm-studio/bin"

# LOAD LOCAL SETTINGS
[[ -f $HOME/.zshrc.local ]] && source $HOME/.zshrc.local
