<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>app.tuple.app</string>
	<key>category</key>
	<string>Tools</string>
	<key>connections</key>
	<dict>
		<key>1268403C-79AD-4137-AB2D-6AF8059D5343</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>88DD14AA-B0E0-4530-9709-58A43B39A4E9</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>61985A59-850C-4B6A-92C6-89D1B7C51B17</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>6C8F9EF0-346A-4BD4-B289-6A208C37B7C7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>88DD14AA-B0E0-4530-9709-58A43B39A4E9</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>61985A59-850C-4B6A-92C6-89D1B7C51B17</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Spencer Dixon</string>
	<key>description</key>
	<string>Start a tuple call</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Tuple Call</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>alfredfiltersresults</key>
				<false/>
				<key>alfredfiltersresultsmatchmode</key>
				<integer>0</integer>
				<key>argumenttreatemptyqueryasnil</key>
				<true/>
				<key>argumenttrimmode</key>
				<integer>0</integer>
				<key>argumenttype</key>
				<integer>0</integer>
				<key>escaping</key>
				<integer>102</integer>
				<key>keyword</key>
				<string>tc</string>
				<key>queuedelaycustom</key>
				<integer>3</integer>
				<key>queuedelayimmediatelyinitially</key>
				<true/>
				<key>queuedelaymode</key>
				<integer>0</integer>
				<key>queuemode</key>
				<integer>1</integer>
				<key>runningsubtext</key>
				<string>Fetching online tuple users...</string>
				<key>script</key>
				<string># online_users.rb
#
# Author: Spencer Dixon &lt;spencer@tuple.app&gt;
# Copyright: Tuple, LLC 

query = ARGV[0]

# -------
# Utility 
# -------

def pbpaste
  `pbpaste`
end

def pbcopy(input)
  str = input.to_s
  IO.popen('pbcopy', 'w') { |f| f &lt;&lt; str }
  str
end

def with_sandboxed_clipboard(&amp;block)
  previous = pbpaste
  yield block
  pbcopy(previous)
end

def regex_fuzzy_search(query, list) 
  query_reg = /#{query.split('').join('.*?')}/
  sorted = []
  list.each do |string|
    match = query_reg.match string
    sorted &lt;&lt; {string: string, rank: match.to_s.length} if match
  end
  sorted.sort_by! {|i| i[:rank] }
  sorted
end

# ----
# Main
# ----

# If tuple responds with this special string we're online and ready to make calls
ONLINE_MAGIC_KEY = "tuple-availability: online"
# Timeout after 2 seconds if Tuple is unable to boot and connect
MAX_CONNECT_ATTEMPTS = 20

with_sandboxed_clipboard do
  # -g to prevent Tuple from coming to foreground. We want Alfred to remain key.
  # /noop will do nothing but ensure Tuple is running if it's not already going
  system('open -g tuple://noop')

  is_online = false
  attempts = 0
  until is_online || attempts == MAX_CONNECT_ATTEMPTS
    system('open -g tuple://availability-status')
    result = pbpaste

    if result == ONLINE_MAGIC_KEY
      is_online = true
    else
      attempts += 1
      sleep(0.1)
    end
  end

  if is_online 
    system('open -g tuple://online-users')
    online_users = pbpaste

    if online_users.include?(',') 
      users = online_users.split(',')
    else
      users = [online_users]
    end

    if query.length &gt; 0 
      sorted = regex_fuzzy_search(query, users)
    else
      sorted = users
    end

    users_string = ""
    if users.count == 0
      users_string = "&lt;item&gt;&lt;title&gt;No online users&lt;/title&gt;&lt;/item&gt;"
    elsif sorted.count == 0
      users_string = "&lt;item&gt;&lt;title&gt;Unable to find any matching online users&lt;/title&gt;&lt;/item&gt;"
    else
      sorted.each do |user|
        users_string &lt;&lt; %Q{&lt;item arg="#{user[:string]}"&gt;&lt;title&gt;#{user[:string]}&lt;/title&gt;&lt;/item&gt;}
      end
    end
  else
    users_string = "&lt;item&gt;&lt;title&gt;Tuple is unable to connect. Try restarting&lt;/title&gt;&lt;/item&gt;"
  end

  xml = &lt;&lt;EOS
&lt;xml&gt;
  &lt;items&gt;
    #{users_string}
  &lt;/items&gt;
&lt;/xml&gt;
EOS

  puts xml
end
</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>subtext</key>
				<string>Initiate a call with an online friend or teammate. Start typing email...</string>
				<key>title</key>
				<string>Tuple Call</string>
				<key>type</key>
				<integer>2</integer>
				<key>withspace</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.scriptfilter</string>
			<key>uid</key>
			<string>1268403C-79AD-4137-AB2D-6AF8059D5343</string>
			<key>version</key>
			<integer>3</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>browser</key>
				<string></string>
				<key>spaces</key>
				<string></string>
				<key>url</key>
				<string>tuple://drive?email={query}</string>
				<key>utf8</key>
				<true/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.openurl</string>
			<key>uid</key>
			<string>6C8F9EF0-346A-4BD4-B289-6A208C37B7C7</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>lastpathcomponent</key>
				<false/>
				<key>onlyshowifquerypopulated</key>
				<false/>
				<key>removeextension</key>
				<false/>
				<key>text</key>
				<string>Initiating call with {query}</string>
				<key>title</key>
				<string>Starting Tuple call</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.output.notification</string>
			<key>uid</key>
			<string>61985A59-850C-4B6A-92C6-89D1B7C51B17</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>argument</key>
				<string>{query}</string>
				<key>variables</key>
				<dict>
					<key>email</key>
					<string>{query}</string>
				</dict>
			</dict>
			<key>type</key>
			<string>alfred.workflow.utility.argument</string>
			<key>uid</key>
			<string>88DD14AA-B0E0-4530-9709-58A43B39A4E9</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Tuple Call is a workflow for initiating calls with friends or teammates who are currently online. To start the workflow you use the shortcut `tc` and then start typing the users email.

Example:

tc spencer@tuple.appâ†µ

==&gt; Starts a call sharing the primary display with 'spencer@tuple.app'</string>
	<key>uidata</key>
	<dict>
		<key>1268403C-79AD-4137-AB2D-6AF8059D5343</key>
		<dict>
			<key>xpos</key>
			<integer>160</integer>
			<key>ypos</key>
			<integer>45</integer>
		</dict>
		<key>61985A59-850C-4B6A-92C6-89D1B7C51B17</key>
		<dict>
			<key>xpos</key>
			<integer>520</integer>
			<key>ypos</key>
			<integer>45</integer>
		</dict>
		<key>6C8F9EF0-346A-4BD4-B289-6A208C37B7C7</key>
		<dict>
			<key>xpos</key>
			<integer>740</integer>
			<key>ypos</key>
			<integer>45</integer>
		</dict>
		<key>88DD14AA-B0E0-4530-9709-58A43B39A4E9</key>
		<dict>
			<key>xpos</key>
			<integer>390</integer>
			<key>ypos</key>
			<integer>75</integer>
		</dict>
	</dict>
	<key>variablesdontexport</key>
	<array/>
	<key>version</key>
	<string>0.1.2</string>
	<key>webaddress</key>
	<string>https://tuple.app</string>
</dict>
</plist>
